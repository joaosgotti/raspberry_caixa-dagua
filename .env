# .env
DB_NAME=postgresql_caixa_dagua
DB_USER=postgresql_caixa_dagua_user
DB_PASSWORD=1PR9xJvT26exLhwry5Xyv0qThzKM01dz
DB_HOST=dpg-d01h3u3uibrs73aqbang-a.oregon-postgres.render.com 
DB_PORT=5432

MQTT_BROKER=0d88ad4901824e80a0a920db5c7d2aca.s1.eu.hivemq.cloud
MQTT_PORT=8883
MQTT_USER=joaosgotti
MQTT_PASSWORD=sS123412
MQTT_TOPIC = sensor/default_topic
MQTT_KEEPALIVE=60

GPIO_TRIG_PIN = 23
GPIO_ECHO_PIN = 24 
PUBLISH_INTERVAL_SECONDS = 60
MQTT_KEEPALIVE_STR = 60

MIN_NIVEL = 11
MAX_NIVEL = 53

----

# .env.example
# Este é um arquivo de exemplo. Copie para .env e preencha com seus valores reais.

# --- Configurações do Banco de Dados (para API/Listener no Render e Listener local se usar config.py) ---
DB_HOST=your_render_db_host.oregon-postgres.render.com
DB_PORT=5432
DB_NAME=meu_banco_caixa_dagua
DB_USER=usuario_caixa_dagua
DB_PASSWORD=SenhaSuperSecretaDoBanco123!

# --- Configurações MQTT (para Listener no Render e Publisher no RPi) ---
# Use as credenciais do seu broker MQTT (ex: HiveMQ Cloud, Mosquitto local, etc.)
MQTT_BROKER=abcdef1234567890.s1.eu.hivemq.cloud
MQTT_PORT=8883 # Use 1883 para MQTT não criptografado, 8883 para MQTT sobre TLS
MQTT_USER=meuUsuarioMQTT
MQTT_PASSWORD=MinhaSenhaMQTTSuperSegura#2024
MQTT_TOPIC=casa/sala/sensor_caixa_dagua/distancia
MQTT_KEEPALIVE=60 # Segundos

# --- Configurações do Sensor HC-SR04 (para Publisher no Raspberry Pi) ---
GPIO_TRIG_PIN=23
GPIO_ECHO_PIN=24
PUBLISH_INTERVAL_SECONDS=30 # Intervalo entre publicações do RPi

# --- Configurações para Cálculo de Nível (para API no Render) ---
# Estes valores precisam ser calibrados para o seu reservatório específico!
# SENSOR_MIN_DISTANCIA_CM: Distância lida pelo sensor (em cm) quando o reservatório está CHEIO.
# (O sensor está no topo, então uma distância MENOR significa que a água está MAIS PERTO do sensor).
SENSOR_MIN_DISTANCIA_CM=15.5

# SENSOR_MAX_DISTANCIA_CM: Distância lida pelo sensor (em cm) quando o reservatório está VAZIO.
# (Uma distância MAIOR significa que a água está MAIS LONGE do sensor).
SENSOR_MAX_DISTANCIA_CM=110.0

# SENSOR_ALTURA_MAXIMA_AGUA_CM: A altura MÁXIMA de água que você considera "útil" ou a altura
# desde o ponto onde o sensor mede "vazio" (MAX_DISTANCIA_CM) até o ponto onde
# ele mede "cheio" (MIN_DISTANCIA_CM).
# Geralmente: ALTURA_MAXIMA_AGUA_CM = MAX_DISTANCIA_CM - MIN_DISTANCIA_CM
# Ou pode ser a altura física total do reservatório se o sensor estiver bem no topo e o fundo for o 0%.
SENSOR_ALTURA_MAXIMA_AGUA_CM=94.5 # Exemplo: 110.0 (vazio) - 15.5 (cheio) = 94.5 cm de variação útil

# --- Opcional: Configurações da API (se houver) ---
# API_HOST=0.0.0.0 # Já definido no runner.py
# API_PORT=8000   # Já definido no runner.py
# DEBUG_MODE=False # Exemplo de flag de debug para a API

# --- Opcional: Outras configurações ---
# SECRET_KEY=UmaChaveSecretaMuitoLongaParaSessoesOuTokensJWT